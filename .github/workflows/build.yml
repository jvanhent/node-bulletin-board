# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. 
on: 
  push:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-npm:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - run: npm install
      - run: npm test
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "BUILD_"
          custom_tag: ${{ github.run_number }}
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: jvanhent/node-bulletin-board:${{ github.run_number }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            GITHUB_REF=${{ github.ref }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  trigger-deploy:
    needs: [build-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deploy if on master
        if: github.ref == 'refs/heads/master'
        uses: mvasigh/dispatch-action@main
        with:
          # You should create a personal access token and store it in your repository
          # token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}  
          event_type: deploy_after_build
    
